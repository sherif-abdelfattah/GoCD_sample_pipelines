{
  "group": "Pyhttpserv",
  "name": "deploy_to_docker",
  "display_order_weight": -1.0,
  "label_template": "${COUNT}",
  "lock_behavior": "none",
  "environment_variables": [],
  "parameters": [],
  "materials": [
    {
      "url": "http://localhost:3000/gogs/pyhttpserver",
      "branch": "master",
      "shallow_clone": false,
      "filter": {
        "ignore": [],
        "whitelist": []
      },
      "auto_update": true,
      "username": "gogs",
      "encrypted_password": "AES:OND3PfMsADXyGkrKsCi9Rw\u003d\u003d:ZXNaGDzrPfvh9luiOAdyzQ\u003d\u003d",
      "name": "gogs_repo",
      "type": "git"
    }
  ],
  "stages": [
    {
      "name": "check_out_code",
      "fetch_materials": true,
      "never_cleanup_artifacts": false,
      "clean_working_directory": false,
      "approval": {
        "type": "success",
        "users": [],
        "roles": [],
        "allow_only_on_success": false
      },
      "environment_variables": [],
      "jobs": [
        {
          "name": "git_check_out",
          "environment_variables": [],
          "tabs": [],
          "resources": [],
          "artifacts": [],
          "timeout": 0.0,
          "tasks": [
            {
              "command": "git",
              "timeout": -1.0,
              "arguments": [
                "clone",
                "http://localhost:3000/gogs/pyhttpserver.git"
              ],
              "run_if": "passed",
              "type": "exec"
            }
          ]
        }
      ]
    },
    {
      "name": "build_docker_image",
      "fetch_materials": true,
      "never_cleanup_artifacts": false,
      "clean_working_directory": false,
      "approval": {
        "type": "success",
        "users": [],
        "roles": [],
        "allow_only_on_success": false
      },
      "environment_variables": [],
      "jobs": [
        {
          "name": "docker_build",
          "environment_variables": [],
          "tabs": [],
          "resources": [],
          "artifacts": [],
          "timeout": 0.0,
          "tasks": [
            {
              "command": "pwd",
              "timeout": -1.0,
              "arguments": [],
              "run_if": "passed",
              "type": "exec"
            },
            {
              "command": "ls",
              "timeout": -1.0,
              "arguments": [
                "-l"
              ],
              "run_if": "passed",
              "type": "exec"
            },
            {
              "command": "/bin/bash",
              "timeout": -1.0,
              "arguments": [
                "-c",
                "docker build -t pyhttpapp:$GO_PIPELINE_LABEL -f ./docker.file ./"
              ],
              "run_if": "passed",
              "type": "exec"
            }
          ]
        }
      ]
    },
    {
      "name": "Stop_older_containers",
      "fetch_materials": true,
      "never_cleanup_artifacts": false,
      "clean_working_directory": false,
      "approval": {
        "type": "success",
        "users": [],
        "roles": [],
        "allow_only_on_success": false
      },
      "environment_variables": [],
      "jobs": [
        {
          "name": "docker_stop",
          "environment_variables": [],
          "tabs": [],
          "resources": [],
          "artifacts": [],
          "timeout": 0.0,
          "tasks": [
            {
              "command": "/bin/bash",
              "timeout": -1.0,
              "arguments": [
                "-c",
                "docker stop $(docker ps -aq)"
              ],
              "run_if": "passed",
              "type": "exec"
            }
          ]
        }
      ]
    },
    {
      "name": "run_container",
      "fetch_materials": true,
      "never_cleanup_artifacts": false,
      "clean_working_directory": false,
      "approval": {
        "type": "success",
        "users": [],
        "roles": [],
        "allow_only_on_success": false
      },
      "environment_variables": [],
      "jobs": [
        {
          "name": "docker_run",
          "environment_variables": [],
          "tabs": [],
          "resources": [],
          "artifacts": [],
          "timeout": 0.0,
          "tasks": [
            {
              "command": "/bin/bash",
              "timeout": -1.0,
              "arguments": [
                "-c",
                "docker run -d --name pyhttp-$GO_PIPELINE_LABEL -p 5001:5000 pyhttpapp:$GO_PIPELINE_LABEL"
              ],
              "run_if": "passed",
              "type": "exec"
            }
          ]
        }
      ]
    }
  ]
}